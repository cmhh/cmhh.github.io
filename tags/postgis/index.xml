<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>postgis on cmhh</title>
    <link>/tags/postgis/</link>
    <description>Recent content in postgis on cmhh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Feb 2022 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/tags/postgis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Serving PostGIS Features Over HTTP</title>
      <link>/2022/2022-02-25-serving_postgis_feautres/</link>
      <pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>/2022/2022-02-25-serving_postgis_feautres/</guid>
      <description>Overview I love spatial data, and I use it a LOT. My typical use case mostly involves downloading a feature class from some online source, and then using it entirely locally. If I just want to look at it, I&amp;rsquo;ll drop it in QGIS, but oftentimes I&amp;rsquo;ll load the features into a (containerised) PostGIS-enabled database. Unfortunately, many of the features I&amp;rsquo;m interested in are harder to download than I&amp;rsquo;d like. Take the Stats NZ Geographic Data Service, for example.</description>
    </item>
    
    <item>
      <title>A Brief Look at Apache Sedona</title>
      <link>/2021/2021-04-19-a-brief-look-at-apache-sedona/</link>
      <pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/2021-04-19-a-brief-look-at-apache-sedona/</guid>
      <description>Overview Apache Sedona, formerly GeoSpark, is a library that let&amp;rsquo;s us make spatial RDDs and DataFrames in Apache Spark, as well as to run spatial queries. Feature classes can get very large, and so being able to run various geoprocessing tasks in a distributed context seems worthwhile. So, in this post, we take a very brief look at Apache Sedona.
This post is not intended to provide comprehensive coverage of the features provided by Sedona–that would be pretty unrealistic for a short blog post.</description>
    </item>
    
    <item>
      <title>Using PostGIS as a Spatial Backend for R</title>
      <link>/2020/2020-10-31-using-postgis-as-a-spatial-backend-for-r/</link>
      <pubDate>Sat, 31 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/2020-10-31-using-postgis-as-a-spatial-backend-for-r/</guid>
      <description>Overview R is a wildly extensible tool, and that extensibility means it can be used in a surprising array of domains. This versatility is great, but there are times when R is just not the best tool for the job–at least not by itself. Geospatial applications are a good example. Packages such as rgdal, sf, and raster make R quite usable in this domain, but R&amp;rsquo;s largely in-memory approach can make geoprocessing tasks involving large spatial objects a little challenging.</description>
    </item>
    
  </channel>
</rss>
